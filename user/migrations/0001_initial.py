# Generated by Django 5.0 on 2024-11-21 13:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ایجاد')),
                ('sms', models.IntegerField(default=0, verbose_name='اسمس')),
                ('kifpool', models.IntegerField(default=0, verbose_name='کیف پول')),
                ('username', models.IntegerField(unique=True, verbose_name='شماره تماس')),
                ('usertype', models.IntegerField(choices=[(0, 'مدیر'), (1, 'کارفرما'), (2, 'کارجو')], default=0, verbose_name='نوع کابر')),
                ('active', models.BooleanField(default=True, verbose_name='فعال بودن اکانت')),
                ('is_admin', models.BooleanField(default=False, verbose_name='کاربر ادمین')),
                ('dataAccepted', models.BooleanField(default=False, verbose_name='اطلاعات تکمیل شده است')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'کاربران',
            },
        ),
        migrations.CreateModel(
            name='Karfarmamodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ایجاد')),
                ('banner', models.FileField(blank=True, null=True, upload_to='static/banner_file', verbose_name='بنر')),
                ('logo', models.FileField(blank=True, null=True, upload_to='static/logo_file', verbose_name='لوگو')),
                ('fName', models.CharField(max_length=100, verbose_name='نام')),
                ('lName', models.CharField(max_length=100, verbose_name='نام خانوادگی')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='ایمیل کارفرما')),
                ('noFaaliat', models.IntegerField(choices=[(0, 'دکتر داروساز داروخانه'), (1, 'مسئول فنی داروخانه'), (2, 'دکتر داروساز شرکت پخش'), (3, 'بازاریاب شرکت پخش')], verbose_name='نوع کارفرما')),
                ('address', models.CharField(max_length=1000, verbose_name='ادرس')),
                ('placeName', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام موسسه')),
                ('date', models.DateField(null=True, verbose_name='تاریخ تاسیس')),
                ('website', models.CharField(blank=True, max_length=100, null=True, verbose_name='ادرس سایت')),
                ('rubika', models.CharField(blank=True, max_length=100, null=True, verbose_name='ادرس روبیکا')),
                ('phoneMajazi', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(regex='^(?:0|98|98|980|0098|098|00980)?(9\\d{9})$')], verbose_name='شماره تلفن مجازی')),
                ('lat', models.FloatField(blank=True, null=True, verbose_name='طول جغرافیایی')),
                ('long', models.FloatField(blank=True, null=True, verbose_name='عرض جغرافیایی')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'کارفرما',
                'verbose_name_plural': 'کارفرما ها ',
            },
        ),
        migrations.CreateModel(
            name='Karjomodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ایجاد')),
                ('type', models.IntegerField(choices=[(0, 'تکنسین داروخانه'), (1, 'تکنسین آرایشی بهداشتی'), (2, 'صندوقدار'), (3, 'انبار دار'), (4, 'مسئول فنی'), (5, 'قائم مقام'), (6, 'کارآموز دارویی'), (7, 'کار آموز آرایشی و بهداشتی')], verbose_name='عنوان شغلی خود را انتخاب کنید')),
                ('banner', models.FileField(blank=True, null=True, upload_to='static/karjo/banner_file', verbose_name='بنر')),
                ('logo', models.FileField(blank=True, null=True, upload_to='static/karjo/logo_file', verbose_name='لوگو')),
                ('fName', models.CharField(max_length=100, verbose_name='نام')),
                ('lName', models.CharField(max_length=100, verbose_name='نام خانوادگی')),
                ('birthdate', models.DateField(verbose_name='تاریخ تولد')),
                ('gender', models.IntegerField(choices=[(0, 'مرد'), (1, 'زن')], verbose_name='جنسیت')),
                ('lat', models.FloatField(blank=True, null=True, verbose_name=' طول جغرافیایی')),
                ('long', models.FloatField(blank=True, null=True, verbose_name=' عرض جغرافیایی')),
                ('education', models.IntegerField(choices=[(0, 'دانشجو'), (1, 'سیکل'), (2, 'دیپلم'), (3, 'کارشناسی'), (4, 'ارشد'), (5, 'دکتری')], verbose_name='وضعیت تحصیلات')),
                ('education_file', models.FileField(blank=True, null=True, upload_to='static/tahsilat_file_file', verbose_name='تحصیلات')),
                ('worked', models.IntegerField(choices=[(0, 'خیر'), (1, 'بله')], verbose_name='آیا سابقه کار دارید؟')),
                ('worked_file', models.FileField(blank=True, null=True, upload_to='static/worked_file_file', verbose_name='سابقه کار')),
                ('nezam', models.IntegerField(choices=[(0, 'معاف'), (1, 'مشمول'), (2, 'پایان خدمت')], verbose_name='وضعیت نظام وظیفه')),
                ('meliNo_file', models.FileField(blank=True, null=True, upload_to='static/meliNo_file_file', verbose_name='کارت ملی')),
                ('meliNo', models.CharField(max_length=100, verbose_name='کد ملی')),
                ('referralCode', models.CharField(blank=True, max_length=100, null=True, verbose_name='معرف')),
                ('knowType', models.IntegerField(choices=[(0, 'معرف'), (1, 'در داروخانه'), (2, 'گوگل')], verbose_name='نحوه\u200cی آشنایی با سایت')),
                ('technisian', models.IntegerField(choices=[(0, 'خیر'), (1, 'بله')], verbose_name='آیا دارای گواهی تکنسین دارویی یا آرایشی بهداشتی هستید ؟ ')),
                ('technisian_file', models.FileField(blank=True, null=True, upload_to='static/teknesian_file_file', verbose_name='گواهی تکنسین')),
                ('certificate', models.IntegerField(choices=[(0, 'خیر'), (1, 'بله')], verbose_name='آیا دارای گواهی مرتبط هستید ؟')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='static/mortabet_file_file', verbose_name='گواهی مرتبط')),
                ('program', models.IntegerField(choices=[(0, 'ایمن افزار شایگان'), (1, 'قانون فارما'), (2, 'فارماسی'), (3, 'دارو پردازان'), (4, 'ماندگار'), (5, 'وکیل')], verbose_name='در صورت آشنایی با نرم\u200cافزار مرتبط، آن را انتخاب کنید ')),
                ('badBack', models.IntegerField(choices=[(0, 'خیر'), (1, 'بله')], verbose_name='آیا دارای گواهی عدم سو پیشینه هستید ؟')),
                ('badBack_file', models.FileField(blank=True, null=True, upload_to='static/soPishine_file_file', verbose_name='عدم سو پیشینه')),
                ('retrain', models.IntegerField(choices=[(0, 'خیر'), (1, 'بله')], verbose_name='آیا دارای ساعات بازآموزی معتبر هستید ؟')),
                ('retrain_file', models.FileField(blank=True, null=True, upload_to='static/retrain_file', verbose_name='ساعات بازآموزی معتبر')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'کارجو',
                'verbose_name_plural': 'کارجو ها',
            },
        ),
        migrations.CreateModel(
            name='TransactionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(verbose_name='مبلغ')),
                ('vaziat', models.IntegerField(choices=[(0, 'ناموفق'), (1, 'موفق')], default=0, verbose_name='وضعیت پرداخت')),
                ('code', models.CharField(max_length=100, verbose_name='کد درگاه')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'تراکنش',
                'verbose_name_plural': 'تراکنش ها',
            },
        ),
    ]
